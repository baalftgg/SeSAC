# https://programmers.co.kr/learn/courses/30/lessons/42586

# 내 스캐치
def solution(progresses, speeds):
    answer = []
    count = 0 
    while progresses:
        while progresses[0]>100:
            count += 1
            progresses.pop(0)
        if count > 0:
            answer.append(count)
            count = 0
        for p in progresses:
            for s in speeds:
                p += s    
    return answer
    
 # 내 풀이 : 이중 반복
def solution(progresses, speeds):
    answer = []
    count = 0
    while progresses:
        for p in range(len(progresses)):
            progresses[p] += speeds[p]  
        while len(progresses)>0 and progresses[0]>=100:
            count += 1
            progresses.pop(0)
            speeds.pop(0)
        if count > 0:
            answer.append(count)
            count = 0 
    return answer
    
 # zip 을 활용한 풀이 
 def solution(progresses, speeds):
    Q=[]
    for p, s in zip(progresses, speeds):
        if len(Q)==0 or Q[-1][0]<-((p-100)//s):
            Q.append([-((p-100)//s),1])
        else:
            Q[-1][1]+=1
    return [q[1] for q in Q]
    
# time 카운터 사용 후 progresses에 제일 앞에 있는 것만 확인
def solution(progresses, speeds):
    answer = []
    time = 0
    count = 0
    while len(progresses)> 0:
        if (progresses[0] + time*speeds[0]) >= 100:
            progresses.pop(0)
            speeds.pop(0)
            count += 1
        else:
            if count > 0:
                answer.append(count)
                count = 0
            time += 1
    answer.append(count)
    return answer
